"""new field in document model

Revision ID: 47a8126a9204
Revises: a1892a80569c
Create Date: 2024-05-13 16:07:28.905950

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '47a8126a9204'
down_revision = 'a1892a80569c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('docfield')
    op.execute('DROP TABLE docfield CASCADE')
    op.drop_table('requestdocumentlink')
    op.drop_table('radio')
    op.add_column('document', sa.Column('file__url', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('document', 'file__url')
    op.create_table('radio',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('field_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('x', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('y', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['docfield.id'], name='radio_field_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='radio_pkey')
    )
    op.create_table('requestdocumentlink',
    sa.Column('signature_request_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], name='requestdocumentlink_document_id_fkey'),
    sa.ForeignKeyConstraint(['signature_request_id'], ['signaturerequest.id'], name='requestdocumentlink_signature_request_id_fkey'),
    sa.PrimaryKeyConstraint('signature_request_id', 'document_id', name='requestdocumentlink_pkey')
    )
    op.create_table('docfield',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type', postgresql.ENUM('SIGNATURE', 'MENTION', 'TEXT', 'CHECKBOX', 'RADIO_GROUP', 'READ_ONLY_TEXT', name='fieldtype'), autoincrement=False, nullable=False),
    sa.Column('page', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('x', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('y', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('signature_request_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('signer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('optional', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('checked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('mention', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('max_length', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('question', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('instruction', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], name='docfield_document_id_fkey'),
    sa.ForeignKeyConstraint(['signature_request_id'], ['signaturerequest.id'], name='docfield_signature_request_id_fkey'),
    sa.ForeignKeyConstraint(['signer_id'], ['signatory.id'], name='docfield_signer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='docfield_pkey')
    )
    # ### end Alembic commands ###
